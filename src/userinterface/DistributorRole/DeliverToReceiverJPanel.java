/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DistributorRole;

import Business.EcoSystem;
import Business.Receiver.Receiver;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yash
 */
public class DeliverToReceiverJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeliverToReceiverJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    WorkRequest workRequest;

    public DeliverToReceiverJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business, WorkRequest workRequest) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.workRequest = workRequest;
        popuateReceiverTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblReceiver = new javax.swing.JTable();
        btnDeliver = new javax.swing.JButton();

        tblReceiver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Receiver"
            }
        ));
        jScrollPane1.setViewportView(tblReceiver);

        btnDeliver.setText("Deliver");
        btnDeliver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(284, Short.MAX_VALUE)
                .addComponent(btnDeliver)
                .addGap(264, 264, 264))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(17, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(272, Short.MAX_VALUE)
                .addComponent(btnDeliver)
                .addGap(80, 80, 80))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(132, 132, 132)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(133, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeliverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliverActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblReceiver.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            UserAccount receiver = (UserAccount) tblReceiver.getValueAt(selectedRow, 0);
            workRequest.setStatus("Delivered to Receiver");
            workRequest.setReceiver(receiver);
            WorkQueue workQueue = new WorkQueue();
            workQueue.addWorkRequesttoQueue(workRequest);
            receiver.setWorkQueue(workQueue);
            JOptionPane.showMessageDialog(null, receiver);

            
            String email="";
            String phone="";
            String carrier="";
            for( Receiver rec : business.getReceiverDirectory().getReceiverList() ){
                if( rec.getUserName().equals(userAccount.getUsername()) ){
                email = rec.getEmail();
                phone = rec.getPhone();
                carrier = rec.getCarrier();
                
                }
            }
            
            String toEmail = email;
            String fromEmail = "dummyprojectuser@gmail.com";
            String fromEmailPassword = "Testpassword";
            String subject = "Registration Approved";

            String textSms = phone;
            if (carrier.equals("ATT")) {
                textSms = textSms + "@txt.att.net";
            } else if (carrier.equals("Verizon")) {
                textSms = textSms + "@vmobl.com";
            } else if (carrier.equals("Sprint")) {
                textSms = textSms + "@messaging.sprintpcs.com";
            } else if (carrier.equals("TMobile")) {
                textSms = textSms + "@tmomail.net";
            }

            Properties properties = new Properties();
            properties.put("mail.smtp.auth", "true");
            properties.put("mail.smtp.starttls.enable", "true");
            properties.put("mail.smtp.host", "smtp.gmail.com");
            properties.put("mail.smtp.port", "587");

            properties.put("mail.smtp.ssl.trust", "smtp.gmail.com");
            properties.put("mail.smtp.ssl.protocols", "TLSv1.2");

            Session session = Session.getDefaultInstance(properties, new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication("dummyprojectuser@gmail.com", "Testpassword");
                }
            });

            try {
                MimeMessage message = new MimeMessage(session);
                message.setFrom(new InternetAddress(fromEmail));
                message.addRecipient(Message.RecipientType.TO, new InternetAddress(toEmail));
                message.addRecipient(Message.RecipientType.TO, new InternetAddress(textSms));
                message.setSubject(subject);
                message.setText("Welome to the Team! Please log in to our portal and start making a difference :)");
                Transport.send(message);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
                System.out.println(e);
            }

        }
    }//GEN-LAST:event_btnDeliverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeliver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReceiver;
    // End of variables declaration//GEN-END:variables

    private void popuateReceiverTable() {
        DefaultTableModel model = (DefaultTableModel) tblReceiver.getModel();

        model.setRowCount(0);

        // Updating the contributorTable
        for (UserAccount user : business.getUserAccountDirectory().getUserAccountList()) {

            if ("Business.Role.ReceiverRole".equals(user.getRole().getClass().getName())) {
                Object[] row = new Object[1];

                row[0] = user;

                model.addRow(row);
            }

        }
    }
}
