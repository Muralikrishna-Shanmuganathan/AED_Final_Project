/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Contributor.Contributor;
import Business.DeliveryAdmin.DeliveryAdmin;
import Business.Distributor.Distributor;
import Business.EcoSystem;
import Business.Receiver.Receiver;
import Business.Registration.Registration;
import Business.Role.ContributorRole;
import Business.Role.DeliveryAdminRole;
import Business.Role.DistributorRole;
import Business.Role.ReceiverRole;
import Business.Role.VolunteerRole;
import Business.UserAccount.UserAccount;
import Business.Volunteer.Volunteer;
import java.awt.CardLayout;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author murali
 */
public class ManageRegistrationsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRegistrationsJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount user;

    public ManageRegistrationsJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.user = user;

        populateRegistrations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRegistrations = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        jLabel1.setText("Manage New Registrations");

        tblRegistrations.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        tblRegistrations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Role", "Name", "User Name", "Location", "Email", "Phone Number", "Carrier", "Status"
            }
        ));
        jScrollPane2.setViewportView(tblRegistrations);

        btnApprove.setBackground(new java.awt.Color(255, 255, 255));
        btnApprove.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        btnApprove.setForeground(new java.awt.Color(67, 0, 163));
        btnApprove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/tick.png"))); // NOI18N
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        btnReject.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        btnReject.setForeground(new java.awt.Color(67, 0, 163));
        btnReject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/close.png"))); // NOI18N
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        btnBack1.setBackground(new java.awt.Color(255, 255, 255));
        btnBack1.setFont(new java.awt.Font("Verdana", 1, 16)); // NOI18N
        btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/back.png"))); // NOI18N
        btnBack1.setText("Back");
        btnBack1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnBack1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnApprove)
                .addGap(71, 71, 71)
                .addComponent(btnReject)
                .addGap(191, 191, 191))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(264, 264, 264))
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnBack1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(136, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnApprove)
                            .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed

        int selectedRowIndex = tblRegistrations.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a user");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblRegistrations.getModel();

        String roleType = (String) model.getValueAt(selectedRowIndex, 0);
        String userName = (String) model.getValueAt(selectedRowIndex, 2);
        String phone = (String) model.getValueAt(selectedRowIndex, 3);
        String email = (String) model.getValueAt(selectedRowIndex, 4);
        String carrier = (String) model.getValueAt(selectedRowIndex, 6);
        String curStatus = (String) model.getValueAt(selectedRowIndex, 7);

        for (Registration reg : system.getRegistrationDirectory().getRegistrationList()) {

            if (userName.equals(reg.getUserName())) {

                if (roleType.equals("Volunteer")) {
                    UserAccount ua1 = system.getUserAccountDirectory().createUserAccount(reg.getName(), reg.getUserName(), reg.getPassword(), null, new VolunteerRole());
                    Volunteer volunteer = system.getVolunteerDirectory().createVolunteer(reg.getName(), reg.getRole(), reg.getUserName(), reg.getPassword(), reg.getEmail(), reg.getPhone(), reg.getCarrier(), reg.getLocation(), reg.getPhoto());
                } else if (roleType.equals("Contributor")) {
                    UserAccount ua1 = system.getUserAccountDirectory().createUserAccount(reg.getName(), reg.getUserName(), reg.getPassword(), null, new ContributorRole());
                    Contributor contributor = system.getContributorDirectory().createContributor(reg.getName(), reg.getRole(), reg.getUserName(), reg.getPassword(), reg.getEmail(), reg.getPhone(), reg.getCarrier(), reg.getLocation(), reg.getPhoto());
                } else if (roleType.equals("Receiver")) {
                    UserAccount ua1 = system.getUserAccountDirectory().createUserAccount(reg.getName(), reg.getUserName(), reg.getPassword(), null, new ReceiverRole());
                    Receiver receiver = system.getReceiverDirectory().createReceiver(reg.getName(), reg.getRole(), reg.getUserName(), reg.getPassword(), reg.getEmail(), reg.getPhone(), reg.getCarrier(), reg.getLocation(), reg.getPhoto());
                } else {
                    JOptionPane.showMessageDialog(null, "No relevant role found");
                }
                if (curStatus.equals("Approved")) {
                    JOptionPane.showMessageDialog(null, "User already Approved");
                    return;
                }
                //Email and SMS Integration

                String toEmail = email;
                String fromEmail = "dummyprojectuser@gmail.com";
                String fromEmailPassword = "Testpassword";
                String subject = "Registration Approved";

                String textSms = phone;
                if (carrier.equals("ATT")) {
                    textSms = textSms + "@txt.att.net";
                } else if (carrier.equals("Verizon")) {
                    textSms = textSms + "@vmobl.com";
                } else if (carrier.equals("Sprint")) {
                    textSms = textSms + "@messaging.sprintpcs.com";
                } else if (carrier.equals("TMobile")) {
                    textSms = textSms + "@tmomail.net";
                }

                Properties properties = new Properties();
                properties.put("mail.smtp.auth", "true");
                properties.put("mail.smtp.starttls.enable", "true");
                properties.put("mail.smtp.host", "smtp.gmail.com");
                properties.put("mail.smtp.port", "587");

                properties.put("mail.smtp.ssl.trust", "smtp.gmail.com");
                properties.put("mail.smtp.ssl.protocols", "TLSv1.2");

                Session session = Session.getDefaultInstance(properties, new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication("dummyprojectuser@gmail.com", "Testpassword");
                    }
                });

                try {
                    MimeMessage message = new MimeMessage(session);
                    message.setFrom(new InternetAddress(fromEmail));
                    message.addRecipient(Message.RecipientType.TO, new InternetAddress(toEmail));
                    message.addRecipient(Message.RecipientType.TO, new InternetAddress(textSms));
                    message.setSubject(subject);
                    message.setText("Welome to the Team! Please log in to our portal and start making a difference :)");
                    Transport.send(message);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                    System.out.println(e);
                }
                reg.setStatus("Approved");
                populateRegistrations();
            }
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRegistrations.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblRegistrations.getModel();
        String roleType = (String) model.getValueAt(selectedRowIndex, 0);
        String userName = (String) model.getValueAt(selectedRowIndex, 2);
        String phone = (String) model.getValueAt(selectedRowIndex, 3);
        String email = (String) model.getValueAt(selectedRowIndex, 4);
        String carrier = (String) model.getValueAt(selectedRowIndex, 6);
        String curStatus = (String) model.getValueAt(selectedRowIndex, 7);

        for (Registration reg : system.getRegistrationDirectory().getRegistrationList()) {

            if (userName.equals(reg.getUserName())) {
                if (curStatus.equals("Approved")) {
                    JOptionPane.showMessageDialog(null, "User already Approved");
                    return;
                } else {
                    String toEmail = email;
                    String fromEmail = "dummyprojectuser@gmail.com";
                    String fromEmailPassword = "Testpassword";
                    String subject = "Registration Rejected";

                    String textSms = phone;
                    if (carrier.equals("ATT")) {
                        textSms = textSms + "@txt.att.net";
                    } else if (carrier.equals("Verizon")) {
                        textSms = textSms + "@vmobl.com";
                    } else if (carrier.equals("Sprint")) {
                        textSms = textSms + "@messaging.sprintpcs.com";
                    } else if (carrier.equals("TMobile")) {
                        textSms = textSms + "@tmomail.net";
                    }

                    Properties properties = new Properties();
                    properties.put("mail.smtp.auth", "true");
                    properties.put("mail.smtp.starttls.enable", "true");
                    properties.put("mail.smtp.host", "smtp.gmail.com");
                    properties.put("mail.smtp.port", "587");

                    properties.put("mail.smtp.ssl.trust", "smtp.gmail.com");
                    properties.put("mail.smtp.ssl.protocols", "TLSv1.2");

                    Session session = Session.getDefaultInstance(properties, new javax.mail.Authenticator() {
                        protected PasswordAuthentication getPasswordAuthentication() {
                            return new PasswordAuthentication("dummyprojectuser@gmail.com", "Testpassword");
                        }
                    });

                    try {
                        MimeMessage message = new MimeMessage(session);
                        message.setFrom(new InternetAddress(fromEmail));
                        message.addRecipient(Message.RecipientType.TO, new InternetAddress(toEmail));
                        message.addRecipient(Message.RecipientType.TO, new InternetAddress(textSms));
                        message.setSubject(subject);
                        message.setText("We regret to inform you that your application has been rejected. Please re-apply if you are still interested to join us.");
                        Transport.send(message);

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                        System.out.println(e);
                    }

                    reg.setStatus("Rejected");
                    populateRegistrations();
                }
            }
        }
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblRegistrations;
    // End of variables declaration//GEN-END:variables

    private void populateRegistrations() {

        DefaultTableModel model = (DefaultTableModel) tblRegistrations.getModel();

        model.setRowCount(0);

        for (Registration reg : system.getRegistrationDirectory().getRegistrationList()) {

            Object[] row = new Object[8];
            row[0] = reg.getRole();
            row[1] = reg.getName();
            row[2] = reg.getUserName();
            row[3] = reg.getLocation();
            row[4] = reg.getEmail();
            row[5] = reg.getPhone();
            row[6] = reg.getCarrier();
            row[7] = reg.getStatus();
            model.addRow(row);
        }

    }

}
