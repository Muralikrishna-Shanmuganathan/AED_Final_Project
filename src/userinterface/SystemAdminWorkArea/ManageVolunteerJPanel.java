/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Volunteer.VolunteerAdmin;
import Business.Volunteer.VolunteerAdminDirectory;
import Business.EcoSystem;
import static Business.Organization.Type.Volunteer;
import static Business.Role.Role.RoleType.Volunteer;
import Business.Role.VolunteerRole;
import Business.UserAccount.UserAccountDirectory;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author murali
 */
public class ManageVolunteerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageVolunteerJPanel
     */
    JPanel userProcessContainer;
    VolunteerAdmin volunteer;
    EcoSystem ecosystem;
    UserAccountDirectory userAccountList;
    VolunteerAdmin v = new VolunteerAdmin();
    
    public ManageVolunteerJPanel(JPanel userProcessContainer,EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
        
        populateVolunteerTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVolunteers = new javax.swing.JTable();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        lblPhoto = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        confirmPasswordField = new javax.swing.JPasswordField();

        jLabel1.setText("Manage Volunteer");

        tblVolunteers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "User Name", "Password"
            }
        ));
        jScrollPane1.setViewportView(tblVolunteers);

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });

        jLabel2.setText("Name:");

        txtConfirmPassword.setText("Confirm Password:");

        jLabel4.setText("UserName:");

        txtPassword.setText("Password:");

        jLabel5.setText("Email:");

        txtPassword1.setText("Full Face Photo:");

        txtPhoneNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhoneNumberKeyPressed(evt);
            }
        });

        jLabel3.setText("Phone Number:");

        jButton1.setText("Upload Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(304, 304, 304))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel2)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtPassword)
                                            .addComponent(txtConfirmPassword))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(2, 2, 2)))
                                .addGap(63, 63, 63))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCreate)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(29, 29, 29)
                                        .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPassword1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnModify)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)))
                        .addGap(121, 121, 121))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnModify)
                            .addComponent(btnCreate))
                        .addGap(0, 91, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(txtPassword1))
                        .addGap(14, 14, 14)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPassword)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtConfirmPassword))
                        .addGap(118, 118, 118))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
    
        char ch = evt.getKeyChar();
        if ( Character.isLetter(ch) || Character.isWhitespace(ch) || Character.isISOControl(ch)){
            txtName.setEditable(true);
        }
        else{
            txtName.setEditable(false);
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtPhoneNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNumberKeyPressed
        // TODO add your handling code here:
        String number = txtPhoneNumber.getText();

        char ch = evt.getKeyChar();
        
        if(ch >= '0' && ch<='9'){
            if(number.length()<10){
               txtPhoneNumber.setEditable(true);
            }
            else{
               txtPhoneNumber.setEditable(false);              
        }
        }
        else{
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE)
                txtPhoneNumber.setEditable(true);
            else
                txtPhoneNumber.setEditable(false);   
        }   
    }//GEN-LAST:event_txtPhoneNumberKeyPressed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
         String password = String.valueOf(passwordField.getPassword());
         String cpassword = String.valueOf(confirmPasswordField.getPassword());
         
        if( txtName.getText().isEmpty()||txtUsername.getText().isEmpty()|| password.isEmpty() || cpassword.isEmpty() ||  txtPhoneNumber.getText().isEmpty() || txtEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Some field are empty");
            return;
        }
        else if ( !(passwordField.equals(confirmPasswordField)) ){
            JOptionPane.showMessageDialog(null, "Passwords don't match");
            return;
        }
        else if(!checkPhoneNumber(txtPhoneNumber.getText())){
            JOptionPane.showMessageDialog(null, "Phone Number format is incorrect");
        }
        else if(!checkEmail(txtEmail.getText())){
            JOptionPane.showMessageDialog(null, "Email format is incorrect");
        }
        else{
        if(ecosystem.getUserAccountDirectory().checkIfUsernameIsUnique(txtUsername.getText())){
            
            
            v.setVolunteerName(txtName.getText());
            v.setVolunteerPhoneNumber(txtPhoneNumber.getText());
            v.setVolunteerEmail(txtEmail.getText());
            v.setVolunteerName(txtName.getText());
            v.setUsername(txtUsername.getText());
            v.setPassword(String.valueOf(txtPassword.getText()));
            v.setRole( new VolunteerRole());
            
            ecosystem.getUserAccountDirectory().addUserAccount(v);
            ecosystem.getVolunteerAdminDirectory().addVolunteer(v);
            
            populateVolunteerTable();
            
            txtName.setText("");
            txtPhoneNumber.setText("");
            txtEmail.setText("");
            txtName.setText("");
         }
        else{
            JOptionPane.showMessageDialog(null, "Username " + txtUsername.getText() + " exists");
         }
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser uploadImageFile = new JFileChooser();
        //Filter image extension
        FileNameExtensionFilter filter = new FileNameExtensionFilter("IMAGES","png","jpg","jpeg");
        uploadImageFile.addChoosableFileFilter(filter);
        try{
        int showOpenDialogue = uploadImageFile.showOpenDialog(null);
        if ( showOpenDialogue == JFileChooser.APPROVE_OPTION ){
           File selectedImageFile = uploadImageFile.getSelectedFile();
           String selectedImagePath = selectedImageFile.getAbsolutePath();
           v.setVolunteerPhoto(selectedImagePath);
           
           JOptionPane.showMessageDialog(null, selectedImagePath);
           
           //display image on label
           ImageIcon icon = new ImageIcon(selectedImagePath);
//           backend.setImage(icon);
           //resizing image to fit the jframe
           Image image = icon.getImage().getScaledInstance(lblPhoto.getWidth(), lblPhoto.getHeight(), Image.SCALE_SMOOTH);
           lblPhoto.setIcon(new ImageIcon(image));
//           JOptionPane.showMessageDialog(null, image); 

            if(selectedImageFile.getAbsolutePath()==null)
                JOptionPane.showMessageDialog(null, "No Image uploaded");
        }
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "No Image uploaded;");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVolunteers.getSelectedRow();

        if (selectedRow >= 0) {
            VolunteerAdmin admin = (VolunteerAdmin) tblVolunteers.getValueAt(selectedRow, 0);
            VolunteerAdminDirectory volunteerAdminDirectory = ecosystem.getVolunteerAdminDirectory();
            volunteerAdminDirectory.removeVolunteer(admin);
            JOptionPane.showMessageDialog(null, "Volunteer "  + txtName.getText() + " deleted");
            
            populateVolunteerTable();
            
            txtName.setText("");
            txtUsername.setText("");
            passwordField.setText("");
            confirmPasswordField.setText("");
            txtPhoneNumber.setText("");
            txtEmail.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Which volunteer do you want to remove?");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVolunteers.getSelectedRow();
        if (selectedRow >= 0) {
            VolunteerAdmin volunteer = (VolunteerAdmin) tblVolunteers.getValueAt(selectedRow, 0);
                    
            volunteer.setUsername(txtUsername.getText());
            volunteer.setPassword(txtPassword.getText());
            volunteer.setVolunteerName(txtName.getText());
            volunteer.setVolunteerPhoneNumber(txtPhoneNumber.getText());
            volunteer.setVolunteerEmail(txtEmail.getText());
           
            
            JFileChooser uploadImageFile = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("IMAGES","png","jpg","jpeg");
            uploadImageFile.addChoosableFileFilter(filter);
            try{
            int showOpenDialogue = uploadImageFile.showOpenDialog(null);
            if ( showOpenDialogue == JFileChooser.APPROVE_OPTION ){
               File selectedImageFile = uploadImageFile.getSelectedFile();
               String selectedImagePath = selectedImageFile.getAbsolutePath();
               volunteer.setVolunteerPhoto(selectedImagePath);

               JOptionPane.showMessageDialog(null, selectedImagePath);
               ImageIcon icon = new ImageIcon(selectedImagePath);
               Image image = icon.getImage().getScaledInstance(lblPhoto.getWidth(), lblPhoto.getHeight(), Image.SCALE_SMOOTH);
               lblPhoto.setIcon(new ImageIcon(image));
            }
            }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No Image uploaded;");
            }
            
            volunteer.setRole(new VolunteerRole());
         
            populateVolunteerTable();
            
            txtName.setText("");
            txtUsername.setText("");
            txtPassword.setText("");
            txtConfirmPassword.setText("");
            txtEmail.setText("");
            txtPhoneNumber.setText("");

        } else {
            JOptionPane.showMessageDialog(null, "Select a volunteer");
        }
    }//GEN-LAST:event_btnModifyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTable tblVolunteers;
    private javax.swing.JLabel txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JLabel txtPassword;
    private javax.swing.JLabel txtPassword1;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
public Boolean checkPhoneNumber(String phNumber) {
        String regex = "^\\(?([0-9]{3})\\)?[-.\\s]?([0-9]{3})[-.\\s]?([0-9]{4})$";
        Pattern pattern = Pattern.compile(regex);
        
        Matcher matcher = pattern.matcher(phNumber);
        if(matcher.matches()){
            return true;
        }
        return false;
    }
public static boolean checkEmail(String email) {
        Pattern pattern;
        Matcher matcher;
        String EMAIL_PATTERN
                = "^[\\w!#$%&’*+/=?`{|}~^-]+(?:\\.[\\w!#$%&’*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
        pattern = Pattern.compile(EMAIL_PATTERN);
        matcher = pattern.matcher(email);
        return matcher.matches();
    }
public static boolean checkPassword(String passwordValue) {
        Pattern pattern;
        Matcher matcher;
        String PASSWORD_PATTERN
                = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&+=~|?])(?=\\S+$).{8,}$";
        pattern = Pattern.compile(PASSWORD_PATTERN);
        matcher = pattern.matcher(passwordValue);
        return matcher.matches();
    }

    private void populateVolunteerTable() {
        
        VolunteerAdminDirectory volunteerAdminDirectory = ecosystem.getVolunteerAdminDirectory();
        DefaultTableModel model = (DefaultTableModel) tblVolunteers.getModel();
        
        model.setRowCount(0);
        
        for (VolunteerAdmin volunteerAdmin : volunteerAdminDirectory.getVolunteerList()) {
                    Object[] row = new Object[3];
                    row[0] = volunteerAdmin;
                    row[1] = volunteerAdmin.getUsername();
                    row[2] = volunteerAdmin.getPassword();
                    model.addRow(row);
        }
    }

}
